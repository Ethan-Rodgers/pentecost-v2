{"mappings":"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","sources":["<anon>","word_drills_script.js"],"sourcesContent":["\"use strict\";\n//setup\nlet words = [];\nlet currentWord = {};\n//Event listeners\ndocument.querySelector(\".mode-select\").addEventListener(\"change\", modeSwitch);\ndocument.querySelector(\".next\").addEventListener(\"click\", nextFlashcard);\ndocument.querySelector(\".flashcard\").addEventListener(\"click\", flipFlashcard);\ndocument.querySelector(\".type-prompt-language\").addEventListener(\"change\", nextTypePrompt);\ndocument.querySelector(\".words-input\").addEventListener(\"input\", enterWords);\ndocument.querySelector(\".type-enter\").addEventListener(\"click\", checkTypeAttempt);\ndocument.querySelector(\".clear-words\").addEventListener(\"click\", clearWords);\n//functions\nfunction modeSwitch() {\n    const mode = document.querySelector(\".mode-select\").value;\n    if (mode === \"flashcards\") {\n        document.querySelector(\".flashcards\").style.display = \"block\";\n        document.querySelector(\".type\").style.display = \"none\";\n    } else if (mode === \"type\") {\n        document.querySelector(\".flashcards\").style.display = \"none\";\n        document.querySelector(\".type\").style.display = \"block\";\n    } else {\n        document.querySelector(\".flashcards\").style.display = \"none\";\n        document.querySelector(\".type\").style.display = \"none\";\n    }\n}\nfunction enterWords() {\n    console.log(\"enterWords\");\n    if (document.querySelector(\".words-input\").value === \"\") {\n        words = [];\n        return;\n    }\n    words = document.querySelector(\".words-input\").value.split(\"\\n\");\n    if (document.querySelector(\".words-input\").value.length >= 6 && document.querySelector(\".words-input\").value.slice(0, 6) !== \"\\n\\n\\n\\n\\n\\n\") document.querySelector(\".words-input\").value = \"\\n\\n\\n\\n\\n\\n\" + document.querySelector(\".words-input\").value;\n    const capitalLetters = \"QWERTYUIOPASDFGHJKLZXCVBNM\";\n    for(let i = 0; i < words.length; i++){\n        if (words[i].trim() === \"\") {\n            words.splice(i, 1);\n            i--;\n            continue;\n        }\n        //Transliteration\n        if (words[i].indexOf(\"(\") !== -1) words[i] = {\n            target: words[i].slice(0, words[i].indexOf(\"(\")).trim(),\n            trans: words[i].slice(words[i].indexOf(\"(\") + 1, words[i].indexOf(\")\")).trim(),\n            en: words[i].slice(words[i].indexOf(\")\") + 1).trim()\n        };\n        else if (words[i].indexOf(\"\\uFF08\") !== -1) words[i] = {\n            target: words[i].slice(0, words[i].indexOf(\"\\uFF08\")).trim(),\n            trans: words[i].slice(words[i].indexOf(\"\\uFF08\") + 1, words[i].indexOf(\"\\uFF09\")).trim(),\n            en: words[i].slice(words[i].indexOf(\"\\uFF09\") + 1).trim()\n        };\n        else {\n            let capitalIndex = -1;\n            for (const letter of capitalLetters)capitalIndex = 1 + words[i].slice(1).indexOf(letter) || capitalIndex;\n            words[i] = {\n                target: words[i].slice(0, capitalIndex).trim(),\n                en: words[i].slice(capitalIndex).trim()\n            };\n        }\n    }\n}\nfunction nextWord() {\n    const oldCurrentWord = {\n        ...currentWord\n    };\n    if (words.length === 0) {\n        currentWord = {};\n        return;\n    } else if (words.length === 1) currentWord = words[0];\n    else while(JSON.stringify(oldCurrentWord) === JSON.stringify(currentWord))currentWord = words[Math.floor(Math.random() * words.length)];\n}\nfunction clearWords() {\n    document.querySelector(\".words-input\").value = \"\";\n    enterWords();\n}\nfunction flipFlashcard() {\n    const flashcard = document.querySelector(\".flashcard\");\n    console.log(words, currentWord, \"flip\");\n    if (!currentWord.trans && flashcard.textContent === currentWord.target || currentWord.trans && flashcard.textContent === `${currentWord.target} (${currentWord.trans})`) flashcard.textContent = currentWord.en;\n    else if (flashcard.textContent === currentWord.en) {\n        if (currentWord.trans) flashcard.textContent = `${currentWord.target} (${currentWord.trans})`;\n        else flashcard.textContent = currentWord.target;\n    }\n}\nfunction nextFlashcard() {\n    nextWord();\n    const flashcard = document.querySelector(\".flashcard\");\n    console.log(words, currentWord, \"nextFlashcard\");\n    if (!currentWord.en || !currentWord.target) {\n        flashcard.textContent = \"-\";\n        return;\n    }\n    if (document.querySelector(\".flashcard-front-language\").value === \"target\") {\n        if (currentWord.trans) flashcard.textContent = `${currentWord.target} (${currentWord.trans})`;\n        else flashcard.textContent = currentWord.target;\n    } else if (document.querySelector(\".flashcard-front-language\").value === \"en\") flashcard.textContent = currentWord.en;\n}\nfunction nextTypePrompt() {\n    nextWord();\n    console.log(words, currentWord, \"nextTypePrompt\");\n    if (!currentWord.en || !currentWord.target) {\n        document.querySelector(\".type-prompt\").textContent = \"-\";\n        return;\n    }\n    if (document.querySelector(\".type-prompt-language\").value === \"target\") document.querySelector(\".type-prompt\").textContent = currentWord.target;\n    else if (document.querySelector(\".type-prompt-language\").value === \"en\") document.querySelector(\".type-prompt\").textContent = currentWord.en;\n}\nfunction checkTypeAttempt() {\n    const typePromptLanguage = document.querySelector(\".type-prompt-language\").value;\n    let correct = 0;\n    if (typePromptLanguage === \"target\") correct = document.querySelector(\".type-attempt\").value.toLowerCase() === currentWord.en.toLowerCase();\n    else if (typePromptLanguage === \"en\") correct = document.querySelector(\".type-attempt\").value.toLowerCase() === currentWord.target.toLowerCase();\n    document.querySelector(\".type-prompt\").style.color = \"black\";\n    if (correct) {\n        document.querySelector(\".type\").style.backgroundColor = \"green\";\n        addTrans();\n        setTimeout(()=>{\n            document.querySelector(\".type\").style.backgroundColor = \"\";\n            document.querySelector(\".type-prompt\").style.color = \"#808080\";\n            document.querySelector(\".type-attempt\").value = \"\";\n            nextTypePrompt();\n        }, 3000);\n    } else {\n        document.querySelector(\".type\").style.backgroundColor = \"red\";\n        setTimeout(()=>{\n            if (typePromptLanguage === \"target\") document.querySelector(\".type-attempt\").value = currentWord.en;\n            else if (typePromptLanguage === \"en\") document.querySelector(\".type-attempt\").value = currentWord.target;\n            addTrans();\n        }, 1000);\n        setTimeout(()=>{\n            document.querySelector(\".type\").style.backgroundColor = \"\";\n            document.querySelector(\".type-prompt\").style.color = \"#808080\";\n            document.querySelector(\".type-attempt\").value = \"\";\n            nextTypePrompt();\n        }, 4000);\n    }\n    function addTrans() {\n        if (currentWord.trans) {\n            if (typePromptLanguage === \"target\") document.querySelector(\".type-prompt\").textContent += ` (${currentWord.trans})`;\n            else if (typePromptLanguage === \"en\") document.querySelector(\".type-attempt\").value += ` (${currentWord.trans})`;\n        }\n    }\n}\n\n//# sourceMappingURL=word_drills.31b4adc7.js.map\n","\"use strict\";\r\n\r\n//setup\r\nlet words = [];\r\nlet currentWord = {};\r\n\r\n//Event listeners\r\ndocument.querySelector(\".mode-select\").addEventListener(\"change\", modeSwitch);\r\ndocument.querySelector(\".next\").addEventListener(\"click\", nextFlashcard);\r\ndocument.querySelector(\".flashcard\").addEventListener(\"click\", flipFlashcard);\r\ndocument.querySelector(\".type-prompt-language\").addEventListener(\"change\", nextTypePrompt);\r\ndocument.querySelector(\".words-input\").addEventListener(\"input\", enterWords);\r\ndocument.querySelector(\".type-enter\").addEventListener(\"click\", checkTypeAttempt);\r\ndocument.querySelector(\".clear-words\").addEventListener(\"click\", clearWords);\r\n\r\n//functions\r\nfunction modeSwitch () {\r\n  const mode = document.querySelector(\".mode-select\").value;\r\n  if (mode === \"flashcards\") {\r\n    document.querySelector(\".flashcards\").style.display = \"block\";\r\n    document.querySelector(\".type\").style.display = \"none\";\r\n  }\r\n  else if (mode === \"type\") {\r\n    document.querySelector(\".flashcards\").style.display = \"none\";\r\n    document.querySelector(\".type\").style.display = \"block\";\r\n  }\r\n  else {\r\n    document.querySelector(\".flashcards\").style.display = \"none\";\r\n    document.querySelector(\".type\").style.display = \"none\";\r\n  }\r\n}\r\n\r\nfunction enterWords () {\r\n  console.log(\"enterWords\")\r\n  if (document.querySelector(\".words-input\").value === \"\") {\r\n    words = [];\r\n    return;\r\n  }\r\n  words = document.querySelector(\".words-input\").value.split(\"\\n\");\r\n  if (document.querySelector(\".words-input\").value.length >= 6 && document.querySelector(\".words-input\").value.slice(0, 6) !== \"\\n\\n\\n\\n\\n\\n\")\r\n    document.querySelector(\".words-input\").value = \"\\n\\n\\n\\n\\n\\n\" + document.querySelector(\".words-input\").value;\r\n  const capitalLetters = \"QWERTYUIOPASDFGHJKLZXCVBNM\";\r\n  for (let i = 0; i < words.length; i++) {\r\n    if (words[i].trim() === \"\") {\r\n      words.splice(i, 1);\r\n      i--;\r\n      continue;\r\n    }\r\n    //Transliteration\r\n    if (words[i].indexOf(\"(\") !== -1) {\r\n      words[i] = {\r\n        target: words[i].slice(0, words[i].indexOf(\"(\")).trim(),\r\n        trans: words[i].slice(words[i].indexOf(\"(\") + 1, words[i].indexOf(\")\")).trim(),\r\n        en: words[i].slice(words[i].indexOf(\")\") + 1).trim(),\r\n      }\r\n    }\r\n    else if (words[i].indexOf(\"（\") !== -1) {\r\n      words[i] = {\r\n        target: words[i].slice(0, words[i].indexOf(\"（\")).trim(),\r\n        trans: words[i].slice(words[i].indexOf(\"（\") + 1, words[i].indexOf(\"）\")).trim(),\r\n        en: words[i].slice(words[i].indexOf(\"）\") + 1).trim(),\r\n      }\r\n    }\r\n    //No transliteration\r\n    else {\r\n      let capitalIndex = -1;\r\n      for (const letter of capitalLetters) {\r\n        capitalIndex = 1 + words[i].slice(1).indexOf(letter) || capitalIndex;\r\n      }\r\n      words[i] = {\r\n        target: words[i].slice(0, capitalIndex).trim(),\r\n        en: words[i].slice(capitalIndex).trim(),\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextWord () {\r\n  const oldCurrentWord = {...currentWord};\r\n  if (words.length === 0) {\r\n    currentWord = {};\r\n    return;\r\n  }\r\n  else if (words.length === 1) currentWord = words[0];\r\n  else {\r\n    while (JSON.stringify(oldCurrentWord) === JSON.stringify(currentWord))\r\n      currentWord = words[Math.floor(Math.random() * words.length)];\r\n  }\r\n}\r\n\r\nfunction clearWords () {\r\n  document.querySelector(\".words-input\").value = \"\";\r\n  enterWords();\r\n}\r\n\r\n\r\nfunction flipFlashcard () {\r\n  const flashcard = document.querySelector(\".flashcard\");\r\n  console.log(words, currentWord, \"flip\")\r\n  if ((!currentWord.trans && flashcard.textContent === currentWord.target) || (currentWord.trans && flashcard.textContent === `${currentWord.target} (${currentWord.trans})`))\r\n    flashcard.textContent = currentWord.en;\r\n  else if (flashcard.textContent === currentWord.en) {\r\n    if (currentWord.trans)\r\n      flashcard.textContent = `${currentWord.target} (${currentWord.trans})`;\r\n    else\r\n      flashcard.textContent = currentWord.target;\r\n  }\r\n}\r\n\r\nfunction nextFlashcard () {\r\n  nextWord();\r\n  const flashcard = document.querySelector(\".flashcard\");\r\n  console.log(words, currentWord, \"nextFlashcard\");\r\n  if (!currentWord.en || !currentWord.target) {\r\n    flashcard.textContent = \"-\";\r\n    return;\r\n  }\r\n  if (document.querySelector(\".flashcard-front-language\").value === \"target\")\r\n    if (currentWord.trans)\r\n      flashcard.textContent = `${currentWord.target} (${currentWord.trans})`;\r\n    else\r\n      flashcard.textContent = currentWord.target;\r\n  else if (document.querySelector(\".flashcard-front-language\").value === \"en\")\r\n    flashcard.textContent = currentWord.en;\r\n}\r\n\r\n\r\nfunction nextTypePrompt () {\r\n  nextWord();\r\n  console.log(words, currentWord, \"nextTypePrompt\");\r\n  if (!currentWord.en || !currentWord.target) {\r\n    document.querySelector(\".type-prompt\").textContent = \"-\";\r\n    return;\r\n  }\r\n  if (document.querySelector(\".type-prompt-language\").value === \"target\")\r\n    document.querySelector(\".type-prompt\").textContent = currentWord.target;\r\n  else if (document.querySelector(\".type-prompt-language\").value === \"en\")\r\n    document.querySelector(\".type-prompt\").textContent = currentWord.en;\r\n}\r\n\r\nfunction checkTypeAttempt () {\r\n  const typePromptLanguage = document.querySelector(\".type-prompt-language\").value;\r\n  let correct = 0;\r\n  if (typePromptLanguage === \"target\")\r\n    correct = document.querySelector(\".type-attempt\").value.toLowerCase() === currentWord.en.toLowerCase();\r\n  else if (typePromptLanguage === \"en\")\r\n    correct = document.querySelector(\".type-attempt\").value.toLowerCase() === currentWord.target.toLowerCase();\r\n\r\n  document.querySelector(\".type-prompt\").style.color = \"black\";\r\n  if (correct) {\r\n    document.querySelector(\".type\").style.backgroundColor = \"green\";\r\n    addTrans();\r\n    setTimeout(() => {\r\n      document.querySelector(\".type\").style.backgroundColor = \"\";\r\n      document.querySelector(\".type-prompt\").style.color = \"#808080\";\r\n      document.querySelector(\".type-attempt\").value = \"\";\r\n      nextTypePrompt();\r\n    }, 3000);\r\n  }\r\n  else {\r\n    document.querySelector(\".type\").style.backgroundColor = \"red\";\r\n    setTimeout(() => {\r\n      if (typePromptLanguage === \"target\") document.querySelector(\".type-attempt\").value = currentWord.en;\r\n      else if (typePromptLanguage === \"en\") document.querySelector(\".type-attempt\").value = currentWord.target;\r\n      addTrans();\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      document.querySelector(\".type\").style.backgroundColor = \"\";\r\n      document.querySelector(\".type-prompt\").style.color = \"#808080\";\r\n      document.querySelector(\".type-attempt\").value = \"\";\r\n      nextTypePrompt();\r\n    }, 4000);\r\n  }\r\n\r\n  function addTrans () {\r\n    if (currentWord.trans) {\r\n      if (typePromptLanguage === \"target\")\r\n        document.querySelector(\".type-prompt\").textContent += ` (${currentWord.trans})`;\r\n      else if (typePromptLanguage === \"en\")\r\n        document.querySelector(\".type-attempt\").value += ` (${currentWord.trans})`;\r\n    }\r\n  }\r\n}\r\n"],"names":["words","currentWord","enterWords","console","log","document","querySelector","value","split","length","slice","i","trim","splice","indexOf","target","trans","en","capitalIndex","letter","nextWord","oldCurrentWord","JSON","stringify","Math","floor","random","nextTypePrompt","textContent","addEventListener","mode","style","display","flashcard","typePromptLanguage","correct","addTrans","toLowerCase","color","backgroundColor","setTimeout"],"version":3,"file":"word_drills.31b4adc7.js.map"}